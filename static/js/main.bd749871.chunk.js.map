{"version":3,"sources":["api.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/SortOptions.tsx","components/PeopleTable.tsx","components/Pages/PeoplePage.tsx","components/Navbar.tsx","components/Pages/HomePage.tsx","components/Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","CENTURIES","PeopleFilters","setSearchParams","sexFilter","get","centuriesFilter","getAll","query","toggleCenturyFilter","century","updatedCenturiesFilter","includes","filter","length","className","map","sex","type","placeholder","onChange","event","target","classNames","centuries","Loader","SortOptions","param","field","label","sortFilter","orderFilter","sort","order","handleOrderFilter","sortOptions","PeopleTable","people","personSlug","useParams","option","person","slug","name","born","died","mother","motherName","father","fatherName","sortPeople","a","b","orderOfSort","localeCompare","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","message","setMessage","dataLoaded","setDataLoaded","useEffect","getPeople","catch","finally","peopleWithParents","find","element","Math","ceil","toLowerCase","Navbar","role","isActive","HomePage","NotFoundPage","App","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bd749871.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sexFilter = searchParams.get('sex');\n  const centuriesFilter = searchParams.getAll('centuries');\n  const query = searchParams.get('query') || '';\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(getSearchWith(searchParams,\n      { query: event.target.value || null }));\n  };\n\n  const toggleCenturyFilter = (century: string): string[] | null => {\n    const updatedCenturiesFilter = centuriesFilter.includes(century)\n      ? centuriesFilter.filter((value) => value !== century)\n      : [...centuriesFilter, century];\n\n    return updatedCenturiesFilter.length ? updatedCenturiesFilter : null;\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {['All', 'm', 'f'].map((sex) => (\n          <SearchLink\n            key={sex}\n            className={sexFilter === sex\n              || (sex === 'All' && sexFilter === null)\n              ? 'is-active'\n              : ''}\n            params={{ sex: sex === 'All' ? null : sex }}\n          >\n            {(() => {\n              if (sex === 'All') {\n                return 'All';\n              }\n\n              if (sex === 'm') {\n                return 'Male';\n              }\n\n              return 'Female';\n            })()}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            value={query}\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuriesFilter.includes(century),\n                })}\n                params={{ centuries: toggleCenturyFilter(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, query: null, centuries: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { SearchLink } from './SearchLink';\n\ntype SortOptionsProps = {\n  field: string;\n  label: string;\n  sortFilter: string | null;\n  orderFilter: string | null;\n};\n\nexport const SortOptions: React.FC<SortOptionsProps> = (\n  {\n    field, label, sortFilter, orderFilter,\n  },\n) => {\n  const handleSortFilter = (param: string) => {\n    if (sortFilter === null && orderFilter === null) {\n      return param;\n    }\n\n    if (sortFilter === param && orderFilter === null) {\n      return param;\n    }\n\n    return null;\n  };\n\n  const handleOrderFilter = (param: string) => {\n    if (sortFilter === null && orderFilter === null) {\n      return null;\n    }\n\n    if (sortFilter === param && orderFilter === null) {\n      return 'desc';\n    }\n\n    return null;\n  };\n\n  return (\n    <th>\n      <span className=\"is-flex is-flex-wrap-nowrap\">\n        {label}\n        <SearchLink\n          params={{\n            sort: handleSortFilter(field),\n            order: handleOrderFilter(field),\n          }}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('fas fa-sort', {\n                'fa-sort-up': orderFilter === 'desc' && sortFilter === field,\n              })}\n            />\n          </span>\n        </SearchLink>\n      </span>\n    </th>\n  );\n};\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { SortOptions } from './SortOptions';\n\ntype PeopleTableProps = {\n  people: Person[];\n};\n\nconst sortOptions: { field: string; label: string }[] = [\n  { field: 'name', label: 'Name' },\n  { field: 'sex', label: 'Sex' },\n  { field: 'born', label: 'Born' },\n  { field: 'died', label: 'Died' },\n];\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const { personSlug } = useParams();\n  const sortFilter = searchParams.get('sort');\n  const orderFilter = searchParams.get('order');\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortOptions.map((option) => (\n            <SortOptions\n              key={option.field}\n              {...option}\n              sortFilter={sortFilter}\n              orderFilter={orderFilter}\n            />\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': personSlug === person.slug,\n            })}\n          >\n            <td>\n              <Link\n                className={classNames({\n                  'has-text-danger': person.sex === 'f',\n                })}\n                to={`/people/${person.slug}${personSlug === person.slug\n                  ? ''\n                  : `?${searchParams.toString()}`}`}\n              >\n                {person.name}\n              </Link>\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother ? (\n                <Link\n                  className=\"has-text-danger\"\n                  to={`${person.mother.slug}?${searchParams.toString()}`}\n                >\n                  {person.motherName}\n                </Link>\n              ) : (\n                person.motherName || '-'\n              )}\n            </td>\n            <td>\n              {person.father ? (\n                <Link to={`${person.father.slug}?${searchParams.toString()}`}>\n                  {person.fatherName}\n                </Link>\n              ) : (\n                person.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\n\nconst sortPeople = (\n  a: string | number,\n  b: string | number,\n  orderOfSort: string | null,\n) => {\n  if (typeof a === 'string' && typeof b === 'string'\n  && orderOfSort === null) {\n    return a.localeCompare(b);\n  }\n\n  if (typeof a === 'string' && typeof b === 'string'\n  && orderOfSort === 'desc') {\n    return b.localeCompare(a);\n  }\n\n  if (typeof a === 'number' && typeof b === 'number'\n  && orderOfSort === null) {\n    return a - b;\n  }\n\n  return (b as number) - (a as number);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [message, setMessage] = useState<boolean>(false);\n  const [dataLoaded, setDataLoaded] = useState<boolean>(false);\n\n  const [searchParams] = useSearchParams();\n\n  const centuries = searchParams.getAll('centuries') || CENTURIES;\n  const query = searchParams.get('query') as string;\n  const order = searchParams.get('order');\n  const sort = searchParams.get('sort') as string;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n        setDataLoaded(true);\n\n        if (response.length === 0) {\n          setMessage(true);\n        }\n      })\n      .catch(() => {\n        setError(true);\n        setDataLoaded(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = people.map(person => {\n    const mother = people.find(element => element.name === person.motherName);\n    const father = people.find(element => element.name === person.fatherName);\n\n    return { ...person, mother, father };\n  }).filter(person => {\n    if (sort === 'name') {\n      return true;\n    }\n\n    if (searchParams.toString().includes('m')) {\n      return person.sex === 'm';\n    }\n\n    if (searchParams.toString().includes('f')) {\n      return person.sex === 'f';\n    }\n\n    return true;\n  }).filter(person => {\n    if (centuries.length !== 0) {\n      return centuries.includes(Math.ceil(person.born / 100).toString());\n    }\n\n    return true;\n  }).filter(person => {\n    if (query !== null) {\n      return person.name.toLowerCase().includes(query.toLowerCase())\n        || person.motherName?.toLowerCase().includes(query.toLowerCase())\n        || person.fatherName?.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return true;\n  })\n    .sort((a, b) => {\n      if (sort === 'name') {\n        return sortPeople(a.name, b.name, order);\n      }\n\n      if (sort === 'sex') {\n        return sortPeople(a.sex, b.sex, order);\n      }\n\n      if (sort === 'born') {\n        return sortPeople(a.born, b.born, order);\n      }\n\n      if (sort === 'died') {\n        return sortPeople(a.died, b.died, order);\n      }\n\n      return 0;\n    });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {message && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!isLoading && dataLoaded && peopleWithParents.length === 0 && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n              {dataLoaded && peopleWithParents.length > 0 && (\n                <PeopleTable people={peopleWithParents} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={\n              ({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            }\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nimport { HomePage } from './components/Pages/HomePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:personSlug\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}